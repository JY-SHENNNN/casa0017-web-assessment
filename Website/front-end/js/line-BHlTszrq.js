import{m as f,B as y,a as g}from"./maplibre-gl-CcRjLUik.js";const u={bakerloo:[179,99,5],central:[227,32,23],circle:[255,211,0],district:[0,120,42],"hammersmith-city":[243,169,187],jubilee:[160,165,169],metropolitan:[155,0,86],northern:[0,0,0],piccadilly:[0,56,136],victoria:[0,152,212],"waterloo-city":[149,205,186]},d={"hammersmith & city":"hammersmith-city","waterloo & city":"waterloo-city"};function m(e){const t=new URLSearchParams(window.location.search);return console.log(t.get(e)),d[t.get(e)]?(console.log(d[t.get(e)]),d[t.get(e)]):t.get(e)}async function h(e,t){const a=await(await fetch(`https://api.tfl.gov.uk/Line/${e}/Route/Sequence/all`)).json(),r=u[e.toLowerCase()],n=new g.LngLatBounds;return a.stopPointSequences.map(s=>s.stopPoint.map(c=>(n.extend([c.lon,c.lat]),[c.lon,c.lat]))).forEach(s=>{const c=`line-${e}-${Math.random()}`;t.getSource(c)||t.addSource(c,{type:"geojson",data:{type:"Feature",geometry:{type:"LineString",coordinates:s}}}),t.addLayer({id:c,type:"line",source:c,paint:{"line-color":`rgb(${r.join(",")})`,"line-width":4}})}),n}let l={};async function S(e,t){const a=await(await fetch(`https://api.tfl.gov.uk/Line/${e}/StopPoints`)).json(),r=u[e.toLowerCase()];l={},a.forEach(s=>{const c=s.commonName.replace(/ Underground Station/g,"").trim();l[c]=[s.lon,s.lat]});const n={type:"FeatureCollection",features:a.map(s=>({type:"Feature",geometry:{type:"Point",coordinates:[s.lon,s.lat]},properties:{title:s.commonName.replace(/ Underground Station/g,"")}}))};w(a);const i=`stations-${e}`;t.getSource(i)||t.addSource(i,{type:"geojson",data:n}),t.addLayer({id:`stations-layer-${e}`,type:"circle",source:i,paint:{"circle-radius":6,"circle-color":`rgb(${r.join(",")})`}}),t.addLayer({id:`stations-label-${e}`,type:"symbol",source:i,layout:{"text-field":["get","title"],"text-offset":[0,1.2],"text-anchor":"top"},paint:{"text-color":"#000","text-halo-color":"#fff","text-halo-width":2}})}function w(e){const t=document.getElementById("from"),o=document.getElementById("to");t.innerHTML='<option value="" disabled selected>Select start location</option>',o.innerHTML='<option value="" disabled selected>Select destination</option>',e.forEach(a=>{const r=a.commonName.replace(/ Underground Station/g,"").trim(),n=document.createElement("option");n.value=r,n.textContent=r;const i=n.cloneNode(!0);t.appendChild(n),o.appendChild(i)})}function v(e,t){const o=document.getElementById("from"),a=document.getElementById("to");function r(){const n=o.value,i=a.value,s=[];n&&l[n]&&s.push(l[n]),i&&l[i]&&s.push(l[i]),e.setPaintProperty(`stations-layer-${t}`,"circle-radius",["case",["in",["get","title"],["literal",[n,i]]],10,6]),e.setPaintProperty(`stations-layer-${t}`,"circle-color",["case",["in",["get","title"],["literal",[n,i]]],"#ff0000",`rgb(${u[t.toLowerCase()].join(",")})`])}o.addEventListener("change",r),a.addEventListener("change",r)}async function L(){const e=m("line");console.log("Selected Line:",e);let t=new f.Map({container:"map",style:y.POSITRON,center:[-.12262486445294093,51.50756471490389],zoom:12});if(await t.once("load"),e){const o=await h(e,t);S(e,t),v(t,e),o&&t.fitBounds(o,{padding:50,maxZoom:14}),x(e)}}async function x(e){try{const t=await fetch(`https://api.tfl.gov.uk/Line/${e}/Status`,{headers:{Accept:"application/json"}});let o;if(t.ok&&t.headers.get("content-type")?.includes("application/json"))o=await t.json();else{const a=await t.text(),n=new DOMParser().parseFromString(a,"text/xml");o=b(n)}console.log("Line Status:",o),C(o)}catch(t){console.error("Error fetching line status:",t)}}function b(e){const t=e.getElementsByTagName("StatusSeverityDescription")[0]?.textContent||"Unknown",o=e.getElementsByTagName("Name")[0]?.textContent||"Unknown";return[{lineStatuses:[{statusSeverityDescription:t}],name:o}]}function C(e){const t=document.getElementById("LineStatus");if(e.length>0){const o=e[0].lineStatuses[0].statusSeverityDescription;e[0].name;const r={"Good Service":"#4caf50","Minor Delays":"#ff9800","Severe Delays":"#f44336","Part Closure":"#f4b400"}[o]||"#607d8b",n=E(o);t.innerHTML=`
            <div class="status-card" style="border-left: 6px solid ${r};">
                <span class="status-icon">${n}</span>
                <p>Status: <strong style="color:${r};">${o}</strong></p>
            </div>`}}function E(e){switch(e){case"Good Service":return"✅";case"Minor Delays":return"⚠️";case"Severe Delays":return"❌";default:return"ℹ️"}}async function B(e){try{const a=(await(await fetch("https://api.tfl.gov.uk/StopPoint/Mode/tube")).json()).stopPoints.find(r=>r.commonName.toLowerCase().includes(e.toLowerCase()));return a?(console.log("Matched station:",a),a.stationNaptan):(console.log("No matching station found."),null)}catch(t){return console.error("Error fetching data:",t),null}}async function N(e,t){const a=await(await fetch(`https://api.tfl.gov.uk/StopPoint/${e}/Arrivals`)).json();if(console.log("Arrivals:",a),console.log("Line Name:",t),t={"hammersmith-city":"Hammersmith & City","waterloo-city":"Waterloo & City"}[t]||t,console.log("Corrected Line Name:",t),a.length>0){const n=a.filter(i=>i.lineName.toLowerCase()===t.toLowerCase());if(console.log("Filtered arrivals:",n),n.length>0){const s=n.sort((c,p)=>new Date(c.expectedArrival)-new Date(p.expectedArrival)).map(c=>({name:c.destinationName||"Unknown Destination",value:new Date(c.expectedArrival).getTime(),platform:c.platformName||"Unknown Platform"}));$(s)}else document.getElementById("chart-container").innerHTML=`<p>No upcoming trains for ${t} at this station.</p>`}else document.getElementById("chart-container").innerHTML="<p>No trains found at this station.</p>"}function $(e){const t=document.getElementById("from");let o=document.getElementById("chart-container");o||(o=document.createElement("div"),o.id="chart-container",document.body.appendChild(o));const a=echarts.init(o),r={title:{text:`Upcoming Train Arrivals at 
${t.value}`,left:"center",containLabel:!0},tooltip:{trigger:"axis",confine:!0,formatter:function(n){const i=n[0].data,s=new Date(i.value);return`${i.name} <br/> 
                        Arrival Time: ${s.toLocaleTimeString()}<br/>
                        Platform: ${i.platform||"N/A"}`},padding:[10,20,10,20]},grid:{left:"5%",right:"5%",bottom:"10%",containLabel:!0},xAxis:{type:"category",data:e.map(n=>n.name.replace("Underground Station","")),axisLabel:{interval:0,fontSize:12,rotate:30},axisTick:{alignWithLabel:!0},boundaryGap:!0},yAxis:{type:"time",axisLabel:{formatter:function(n){return new Date(n).toLocaleTimeString()}}},series:[{name:"Arrival Time",type:"bar",data:e.map(n=>({value:n.value,name:n.name,platform:n.platform})),itemStyle:{color:"#007BFF"}}]};a.setOption(r),o.style.position="fixed",o.style.bottom="2%",o.style.right=0,o.style.width="25%",o.style.height="60%",o.style.zIndex="1000",o.style.boxShadow="0 4px 10px rgba(0, 0, 0, 0.1)",o.style.borderRadius="8px"}document.getElementById("routeForm").onsubmit=async function(e){e.preventDefault();const t=m("line"),o=document.getElementById("from").value,a=await B(o);a?await N(a,t):document.getElementById("chart-container").innerHTML="<p>Station not found.</p>"};window.onload=L;window.addEventListener("load",function(){const e=document.getElementById("welcomeModal"),t=document.querySelector(".close-btn");e.style.display="block",t.onclick=function(){e.style.display="none"},window.onclick=function(o){o.target===e&&(e.style.display="none")}});
